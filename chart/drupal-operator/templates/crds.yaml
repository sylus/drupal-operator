{{- if .Values.crd.install }}
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: '{{ include "drupal-operator.name" . }}'
    chart: '{{ include "drupal-operator.chart" . }}'
    controller-tools.k8s.io: "1.0"
    heritage: '{{ .Release.Service }}'
    release: '{{ .Release.Name }}'
  name: droplets.drupal.sylus.ca
  annotations:
    helm.sh/hook: crd-install
spec:
  group: drupal.sylus.ca
  names:
    kind: Droplet
    plural: droplets
    shortNames:
    - droplet
  scope: Namespaced
  subresources:
    scale:
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          type: object
        spec:
          properties:
            domains:
              items:
                type: string
              minItems: 1
              type: array
            drupal:
              properties:
                code:
                  properties:
                    contentSubPath:
                      type: string
                    emptyDir:
                      type: object
                    git:
                      properties:
                        emptyDir:
                          type: object
                        env:
                          items:
                            type: object
                          type: array
                        envFrom:
                          items:
                            type: object
                          type: array
                        reference:
                          type: string
                        repository:
                          type: string
                      required:
                      - repository
                      type: object
                    hostPath:
                      type: object
                    mountPath:
                      type: string
                    persistentVolumeClaim:
                      type: object
                  type: object
                databaseBackend:
                  type: string
                env:
                  items:
                    type: object
                  type: array
                envFrom:
                  items:
                    type: object
                  type: array
                image:
                  type: string
                imagePullPolicy:
                  enum:
                  - Always
                  - IfNotPresent
                  - Never
                  type: string
                imagePullSecrets:
                  items:
                    type: object
                  type: array
                media:
                  properties:
                    emptyDir:
                      type: object
                    gcs:
                      properties:
                        bucket:
                          minLength: 1
                          type: string
                        env:
                          items:
                            type: object
                          type: array
                        prefix:
                          type: string
                      required:
                      - bucket
                      type: object
                    hostPath:
                      type: object
                    persistentVolumeClaim:
                      type: object
                  type: object
                replicas:
                  format: int32
                  type: integer
                tag:
                  type: string
                volumeMounts:
                  items:
                    type: object
                  type: array
                volumes:
                  items:
                    type: object
                  type: array
              type: object
            ingressAnnotations:
              type: object
            nginx:
              properties:
                env:
                  items:
                    type: object
                  type: array
                envFrom:
                  items:
                    type: object
                  type: array
                image:
                  type: string
                imagePullPolicy:
                  enum:
                  - Always
                  - IfNotPresent
                  - Never
                  type: string
                imagePullSecrets:
                  items:
                    type: object
                  type: array
                replicas:
                  format: int32
                  type: integer
                tag:
                  type: string
                volumeMounts:
                  items:
                    type: object
                  type: array
                volumes:
                  items:
                    type: object
                  type: array
              type: object
            serviceAccountName:
              type: string
            tlsSecretRef:
              type: string
          required:
          - domains
          type: object
        status:
          properties:
            replicas:
              format: int32
              type: integer
          type: object
  version: v1beta1
{{- end }}
